/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

import guihelpers.Table_Editor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import nongui.Goal;
import nongui.Goal_List;

/**
 *
 * @author Tilak
 */
public class Gui2 extends javax.swing.JFrame {
	JTable table;
	Goal_List list;
	Table_Editor editor;
	Goal goal;
	boolean isNewGoal = true;

	/**
	 * Creates new form Gui2
	 */
	public Gui2() {

		initComponents();

	}

	public Gui2(JTable j, int index) throws Exception {
		list = new Goal_List();
		table = j;
		initComponents();
		editor = new Table_Editor(table);
		if (index > -1) {
			goal = list.getList().get(index);
			isNewGoal = false;
		} else {
			goal = new Goal();
		}
		name.setText(goal.getName());
		hoursCompleted.setValue((int) goal.gethC());
		minutesCompleted.setValue((goal.gethC() - (int) (goal.gethC())) * 60);
		hoursNeeded.setValue((int) goal.gethN());
		minutesNeeded.setValue((goal.gethN() - (int) (goal.gethN())) * 60);
		editor.fill();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JTextField();
        hoursCompleted = new javax.swing.JSpinner();
        minutesCompleted = new javax.swing.JSpinner();
        colon_for_completed = new javax.swing.JLabel();
        timeCompleted = new javax.swing.JLabel();
        hoursNeeded = new javax.swing.JSpinner();
        minutesNeeded = new javax.swing.JSpinner();
        colon_for_needed1 = new javax.swing.JLabel();
        timeNeeded = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);

        name.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        name.setText("Name");

        hoursCompleted.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        hoursCompleted.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        minutesCompleted.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        minutesCompleted.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        colon_for_completed.setText(":");

        timeCompleted.setText("Time Completed (h:m)");

        hoursNeeded.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        hoursNeeded.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        minutesNeeded.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        minutesNeeded.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        colon_for_needed1.setText(":");

        timeNeeded.setText("Time Needed (h:m)");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(timeNeeded, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(timeCompleted)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hoursCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(colon_for_completed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minutesCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(169, 169, 169)
                            .addComponent(hoursNeeded, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(colon_for_needed1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(minutesNeeded, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minutesCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(colon_for_completed, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(timeCompleted)
                        .addComponent(hoursCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeNeeded)
                    .addComponent(hoursNeeded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minutesNeeded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colon_for_needed1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(minutesCompleted.getValue()==minutesNeeded.getValue()&&hoursCompleted.getValue()==hoursNeeded.getValue()){
                    JOptionPane.showMessageDialog(null, "Please enter different times!");
                }
                else{
		String goalName = name.getText();
		int goalHoursNeeded = 0, goalHoursCompleted = 0;
		double goalMinutesNeeded = 0, goalMinutesCompleted = 0;
		try {
			hoursNeeded.commitEdit();
			goalHoursNeeded = (Integer) hoursNeeded.getValue();
		} catch (java.text.ParseException e) {
		}
		try {
			hoursCompleted.commitEdit();
			goalHoursCompleted = (Integer) hoursCompleted.getValue();
		} catch (java.text.ParseException e) {
		}
		try {
			minutesNeeded.commitEdit();
			goalMinutesNeeded = ((double) ((Integer) minutesNeeded.getValue())) / 60;
		} catch (java.text.ParseException e) {
		}
		try {
			minutesCompleted.commitEdit();
			goalMinutesCompleted = ((double) ((Integer) minutesCompleted.getValue())) / 60;
		} catch (java.text.ParseException e) {
		}
                
		if (isNewGoal) {
			list.getList().add(new Goal(goalName, goalHoursCompleted + goalMinutesCompleted, goalHoursNeeded + goalMinutesNeeded));
		} else {
			goal.setName(goalName);
			goal.sethC(goalMinutesCompleted + goalHoursCompleted);
			goal.sethN(goalMinutesNeeded + goalHoursNeeded);
		}
		try {
			list.save();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			editor.fill();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (isNewGoal) {
			JOptionPane.showMessageDialog(null, "Added goal");
		} else {
			JOptionPane.showMessageDialog(null, "Saved goal");
                }
		try {
			editor.fill();
		} catch (Exception ex) {
			Logger.getLogger(Gui2.class.getName()).log(Level.SEVERE, null, ex);
		}
            }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

	

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		try {
			// Set System L&F
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Exception e) {

		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Gui2().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel colon_for_completed;
    private javax.swing.JLabel colon_for_needed1;
    private javax.swing.JSpinner hoursCompleted;
    private javax.swing.JSpinner hoursNeeded;
    private javax.swing.JButton jButton1;
    private javax.swing.JSpinner minutesCompleted;
    private javax.swing.JSpinner minutesNeeded;
    private javax.swing.JTextField name;
    private javax.swing.JLabel timeCompleted;
    private javax.swing.JLabel timeNeeded;
    // End of variables declaration//GEN-END:variables
}
